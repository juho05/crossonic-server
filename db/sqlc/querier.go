// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgconn"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddPlaylistTracks(ctx context.Context, arg []AddPlaylistTracksParams) (int64, error)
	CheckPlaylistExists(ctx context.Context, arg CheckPlaylistExistsParams) (bool, error)
	ClearPlaylist(ctx context.Context, playlistID string) error
	CreateAlbum(ctx context.Context, arg CreateAlbumParams) (*Album, error)
	CreateAlbumArtists(ctx context.Context, arg []CreateAlbumArtistsParams) (int64, error)
	CreateAlbumGenres(ctx context.Context, arg []CreateAlbumGenresParams) (int64, error)
	CreateArtist(ctx context.Context, arg CreateArtistParams) (*Artist, error)
	CreateGenre(ctx context.Context, name string) error
	CreatePlaylist(ctx context.Context, arg CreatePlaylistParams) error
	CreateScrobbles(ctx context.Context, arg []CreateScrobblesParams) (int64, error)
	CreateSong(ctx context.Context, arg CreateSongParams) (*Song, error)
	CreateSongArtists(ctx context.Context, arg []CreateSongArtistsParams) (int64, error)
	CreateSongGenres(ctx context.Context, arg []CreateSongGenresParams) (int64, error)
	CreateUser(ctx context.Context, arg CreateUserParams) error
	DeleteAlbumArtists(ctx context.Context, albumID string) error
	DeleteAlbumGenres(ctx context.Context, albumID string) error
	DeleteAlbumsLastUpdatedBefore(ctx context.Context, updated pgtype.Timestamptz) error
	DeleteAllGenres(ctx context.Context) error
	DeleteArtistsLastUpdatedBefore(ctx context.Context, updated pgtype.Timestamptz) error
	DeleteGenre(ctx context.Context, name string) error
	DeleteLBFeedbackUpdatedStarsNotInMBIDList(ctx context.Context, arg DeleteLBFeedbackUpdatedStarsNotInMBIDListParams) (pgconn.CommandTag, error)
	DeleteNowPlaying(ctx context.Context, userName string) error
	DeletePlaylist(ctx context.Context, arg DeletePlaylistParams) (pgconn.CommandTag, error)
	DeleteSongArtists(ctx context.Context, songID string) error
	DeleteSongGenres(ctx context.Context, songID string) error
	DeleteSongsLastUpdatedBefore(ctx context.Context, updated pgtype.Timestamptz) error
	DeleteUser(ctx context.Context, name string) (string, error)
	FindAlbum(ctx context.Context, arg FindAlbumParams) (*FindAlbumRow, error)
	FindAlbumArtistRefsBySongs(ctx context.Context, songIds []string) ([]*FindAlbumArtistRefsBySongsRow, error)
	FindAlbumArtists(ctx context.Context, userName string) ([]*FindAlbumArtistsRow, error)
	FindAlbumsAlphabeticalByName(ctx context.Context, arg FindAlbumsAlphabeticalByNameParams) ([]*FindAlbumsAlphabeticalByNameRow, error)
	FindAlbumsByArtist(ctx context.Context, arg FindAlbumsByArtistParams) ([]*FindAlbumsByArtistRow, error)
	FindAlbumsByGenre(ctx context.Context, arg FindAlbumsByGenreParams) ([]*FindAlbumsByGenreRow, error)
	FindAlbumsByNameWithArtistMatchCount(ctx context.Context, arg FindAlbumsByNameWithArtistMatchCountParams) ([]*FindAlbumsByNameWithArtistMatchCountRow, error)
	FindAlbumsByYear(ctx context.Context, arg FindAlbumsByYearParams) ([]*FindAlbumsByYearRow, error)
	FindAlbumsHighestRated(ctx context.Context, arg FindAlbumsHighestRatedParams) ([]*FindAlbumsHighestRatedRow, error)
	FindAlbumsNewest(ctx context.Context, arg FindAlbumsNewestParams) ([]*FindAlbumsNewestRow, error)
	FindAlbumsRandom(ctx context.Context, arg FindAlbumsRandomParams) ([]*FindAlbumsRandomRow, error)
	FindAlbumsStarred(ctx context.Context, arg FindAlbumsStarredParams) ([]*FindAlbumsStarredRow, error)
	FindAllGenres(ctx context.Context) ([]string, error)
	FindArtist(ctx context.Context, arg FindArtistParams) (*FindArtistRow, error)
	FindArtistRefsByAlbums(ctx context.Context, albumIds []string) ([]*FindArtistRefsByAlbumsRow, error)
	FindArtistRefsBySongs(ctx context.Context, songIds []string) ([]*FindArtistRefsBySongsRow, error)
	FindArtistSimple(ctx context.Context, id string) (*Artist, error)
	FindArtistsByName(ctx context.Context, artistNames []string) ([]*Artist, error)
	FindGenre(ctx context.Context, name string) (string, error)
	FindGenresByAlbums(ctx context.Context, albumIds []string) ([]*FindGenresByAlbumsRow, error)
	FindGenresBySongs(ctx context.Context, songIds []string) ([]*FindGenresBySongsRow, error)
	FindGenresWithCount(ctx context.Context) ([]*FindGenresWithCountRow, error)
	FindLBFeedbackUpdatedSongIDsInMBIDListNotStarred(ctx context.Context, arg FindLBFeedbackUpdatedSongIDsInMBIDListNotStarredParams) ([]string, error)
	FindNotLBUpdatedSongs(ctx context.Context, userName string) ([]*FindNotLBUpdatedSongsRow, error)
	FindPlaylist(ctx context.Context, arg FindPlaylistParams) (*FindPlaylistRow, error)
	FindPlaylists(ctx context.Context, user string) ([]*FindPlaylistsRow, error)
	FindPossibleScrobbleConflicts(ctx context.Context, arg FindPossibleScrobbleConflictsParams) ([]*Scrobble, error)
	FindRandomSongs(ctx context.Context, arg FindRandomSongsParams) ([]*FindRandomSongsRow, error)
	FindSong(ctx context.Context, id string) (*FindSongRow, error)
	FindSongByPath(ctx context.Context, path string) (*FindSongByPathRow, error)
	FindSongCount(ctx context.Context) (int64, error)
	FindSongWithoutAlbum(ctx context.Context, id string) (*Song, error)
	FindSongs(ctx context.Context, songIds []string) ([]*FindSongsRow, error)
	FindSongsByAlbum(ctx context.Context, arg FindSongsByAlbumParams) ([]*FindSongsByAlbumRow, error)
	FindSongsByMusicBrainzID(ctx context.Context, musicBrainzID *string) ([]*FindSongsByMusicBrainzIDRow, error)
	FindUnsubmittedLBScrobbles(ctx context.Context) ([]*FindUnsubmittedLBScrobblesRow, error)
	FindUser(ctx context.Context, name string) (*User, error)
	FindUsers(ctx context.Context) ([]*User, error)
	GetMedianReplayGain(ctx context.Context) (interface{}, error)
	GetNowPlaying(ctx context.Context, userName string) (*Scrobble, error)
	GetNowPlayingSongs(ctx context.Context, userName string) ([]*GetNowPlayingSongsRow, error)
	GetPlaylistOwner(ctx context.Context, id string) (string, error)
	GetPlaylistTrackNumbers(ctx context.Context, playlistID string) ([]int32, error)
	GetPlaylistTracks(ctx context.Context, arg GetPlaylistTracksParams) ([]*GetPlaylistTracksRow, error)
	GetScrobbleDistinctAlbumCount(ctx context.Context, arg GetScrobbleDistinctAlbumCountParams) (interface{}, error)
	GetScrobbleDistinctArtistCount(ctx context.Context, arg GetScrobbleDistinctArtistCountParams) (interface{}, error)
	GetScrobbleDistinctSongCount(ctx context.Context, arg GetScrobbleDistinctSongCountParams) (interface{}, error)
	GetScrobbleDurationSumMS(ctx context.Context, arg GetScrobbleDurationSumMSParams) (interface{}, error)
	GetScrobbleTopSongsByDuration(ctx context.Context, arg GetScrobbleTopSongsByDurationParams) ([]*GetScrobbleTopSongsByDurationRow, error)
	GetStreamInfo(ctx context.Context, id string) (*GetStreamInfoRow, error)
	GetSystemValue(ctx context.Context, key string) (*System, error)
	InsertSystemValueIfNotExists(ctx context.Context, arg InsertSystemValueIfNotExistsParams) (*System, error)
	RemoveAlbumRating(ctx context.Context, arg RemoveAlbumRatingParams) error
	RemoveArtistRating(ctx context.Context, arg RemoveArtistRatingParams) error
	RemoveLBFeedbackUpdated(ctx context.Context, arg RemoveLBFeedbackUpdatedParams) error
	RemovePlaylistTracks(ctx context.Context, arg RemovePlaylistTracksParams) error
	RemoveSongRating(ctx context.Context, arg RemoveSongRatingParams) error
	ReplaceSystemValue(ctx context.Context, arg ReplaceSystemValueParams) (*System, error)
	SearchAlbumArtists(ctx context.Context, arg SearchAlbumArtistsParams) ([]*SearchAlbumArtistsRow, error)
	SearchAlbums(ctx context.Context, arg SearchAlbumsParams) ([]*SearchAlbumsRow, error)
	SearchSongs(ctx context.Context, arg SearchSongsParams) ([]*SearchSongsRow, error)
	SetAlbumRating(ctx context.Context, arg SetAlbumRatingParams) error
	SetArtistRating(ctx context.Context, arg SetArtistRatingParams) error
	SetLBFeedbackUpdated(ctx context.Context, arg []SetLBFeedbackUpdatedParams) (int64, error)
	SetLBSubmittedByUsers(ctx context.Context, userNames []string) error
	SetSongRating(ctx context.Context, arg SetSongRatingParams) error
	StarAlbum(ctx context.Context, arg StarAlbumParams) error
	StarArtist(ctx context.Context, arg StarArtistParams) error
	StarSong(ctx context.Context, arg StarSongParams) error
	StarSongs(ctx context.Context, arg []StarSongsParams) (int64, error)
	UnstarAlbum(ctx context.Context, arg UnstarAlbumParams) error
	UnstarArtist(ctx context.Context, arg UnstarArtistParams) error
	UnstarSong(ctx context.Context, arg UnstarSongParams) error
	UpdateAlbum(ctx context.Context, arg UpdateAlbumParams) error
	UpdateArtist(ctx context.Context, arg UpdateArtistParams) error
	UpdatePlaylist(ctx context.Context, arg UpdatePlaylistParams) error
	UpdatePlaylistName(ctx context.Context, arg UpdatePlaylistNameParams) (pgconn.CommandTag, error)
	UpdatePlaylistTrackNumbers(ctx context.Context, arg UpdatePlaylistTrackNumbersParams) error
	UpdatePlaylistUpdated(ctx context.Context, arg UpdatePlaylistUpdatedParams) (pgconn.CommandTag, error)
	UpdateSong(ctx context.Context, arg UpdateSongParams) error
	UpdateUserListenBrainzConnection(ctx context.Context, arg UpdateUserListenBrainzConnectionParams) (*User, error)
}

var _ Querier = (*Queries)(nil)
